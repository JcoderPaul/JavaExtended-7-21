Напоминалка по Iterator

Одним из ключевых методов интерфейса Collection является метод Iterator<E> iterator().
Он возвращает итератор - то есть объект, реализующий интерфейс Iterator.

Интерфейс Iterator имеет следующее определение:

public interface Iterator <E>{

    E next();
    boolean hasNext();
    void remove();
}

Реализация интерфейса предполагает, что с помощью вызова метода next() можно получить следующий элемент.
С помощью метода hasNext() можно узнать, есть ли следующий элемент, и не достигнут ли конец коллекции.
И если элементы еще имеются, то hasNext() вернет значение true.
Метод hasNext() следует вызывать перед методом next(), так как при достижении конца коллекции, а вернее
при вызове метод next() на пустоту выбрасывает исключение NoSuchElementException.
И метод remove() удаляет текущий элемент, который был получен последним вызовом next().

Интерфейс Iterator предоставляет ограниченный функционал. Гораздо больший набор методов предоставляет
другой итератор - интерфейс ListIterator. Данный итератор используется классами, реализующими интерфейс
List, то есть классами LinkedList, ArrayList и др.